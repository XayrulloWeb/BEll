// Файл: prisma/schema.prisma

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// Модель для Школы
model School {
  id               String      @id @default(uuid())
  name             String
  activeScheduleId String?     @map("active_schedule_id")
  
  // Связи
  users            User[]      // У школы может быть много пользователей
  schedules        Schedule[]  // У школы может быть много расписаний
  specialDays      SpecialDay[]
  apiKey           String?     @unique @map("api_key")

  @@map("schools")
}

// Модель для Пользователя
model User {
  id           String @id @default(uuid())
  username     String @unique
  passwordHash String @map("password_hash")
  role         String // 'admin' или 'superadmin'
  schoolId     String @map("school_id")

  // Связь: Пользователь принадлежит одной школе
  school       School @relation(fields: [schoolId], references: [id], onDelete: Cascade)

  @@map("users")
}

// Модель для Расписания
model Schedule {
  id       String  @id
  name     String
  schoolId String  @map("school_id")

  // Связи
  school   School  @relation(fields: [schoolId], references: [id], onDelete: Cascade)
  bells    Bell[]  // У расписания может быть много звонков
  
  // Расписание может быть использовано для замены в особый день
  specialDayOverrides SpecialDay[] 

  @@map("schedules")
}

// Модель для Звонка
model Bell {
  id             String  @id
  name           String
  time           String
  day            String
  enabled        Boolean @default(true)
  soundId        String? @map("sound_id")
  bellType       String  @default("lesson") @map("bell_type")
  breakDuration  Int     @default(0) @map("break_duration")
  autoGenerated  Boolean @default(false) @map("auto_generated")
  groupId        String? @map("group_id")
  scheduleId     String  @map("schedule_id")

  // Связь: Звонок принадлежит одному расписанию
  schedule       Schedule @relation(fields: [scheduleId], references: [id], onDelete: Cascade)

  @@map("bells")
}

// Модель для Особых Дней
model SpecialDay {
  date               String
  schoolId           String   @map("school_id")
  type               String   // 'HOLIDAY' или 'OVERRIDE'
  overrideScheduleId String?  @map("override_schedule_id")

  // Связи
  school             School   @relation(fields: [schoolId], references: [id], onDelete: Cascade)
  overrideSchedule   Schedule? @relation(fields: [overrideScheduleId], references: [id], onDelete: SetNull)

  // Составной первичный ключ
  @@id([date, schoolId])
  @@map("special_days")
}